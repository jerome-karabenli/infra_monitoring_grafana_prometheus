version: "3.8"

services:
#Grafana service for data viz
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - monitoring
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      start_period: 10s
      retries: 2
      timeout: 5s
      interval: 10s

# Prometheus database for storage and scrapping of metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      start_period: 30s
      retries: 3
      timeout: 5s
      interval: 30s

# Prometheus alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9093/-/healthy"]
      start_period: 30s
      retries: 3
      timeout: 5s
      interval: 30s


# Node exporter for machine metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    command: 
      - '--path.rootfs=/host' 
      - '--collector.disable-defaults' 
      - '--collector.stat'  
      - '--collector.cpu' 
      - '--collector.cpufreq' 
      - '--collector.diskstats' 
      - '--collector.filesystem'
      - '--collector.meminfo'
      - '--collector.netdev'
      - '--collector.thermal_zone'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring
    ports:
      - 9100:9100
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9100"]
      start_period: 10s
      retries: 2
      timeout: 5s
      interval: 10s

# Cadvisor for docker metrics
  cadvisor:
    container_name: cadvisor
    devices:
      - /dev/kmsg
    ports:
      - 8099:8080
    image: zcube/cadvisor:latest
    ipc: shareable
    networks:
      - monitoring
    privileged: true
    restart: unless-stopped
    command: 
      - '--housekeeping_interval=30s'
      - '--max_housekeeping_interval=35s'
      - '--global_housekeeping_interval=30s'
      - '--storage_duration=1m0s'
      - '--allow_dynamic_housekeeping=true'
      - '--docker_only=true'
      - '--store_container_labels=false'
      - '--disable_metrics=percpu,process,sched,tcp,udp,diskIO,disk'
      - '-port=8080'
    security_opt:
      - label=disable
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /dev/disk/:/dev/disk:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/healthz"]
      start_period: 15s
      retries: 3
      timeout: 5s
      interval: 30s
    deploy:
        resources:
            limits:
              cpus: "0.5"
#              memory: 100M


volumes:
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  alertmanager_data:
    name: alertmanager_data

networks:
  monitoring:
    name: monitoring